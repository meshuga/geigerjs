(()=>{var e,t,o;const a="no device selected";var n=a;const c=e=>{n=e,document.getElementById("device").textContent=n};var i=[];const r={rowData:i,columnDefs:[{field:"datetime",flex:2,headerName:"Date & time",valueFormatter:e=>e.value.toUTCString()},{field:"measurementValue",flex:1,headerName:"Measurement value"},{field:"measurementType",flex:1,headerName:"Measurement type"},{field:"latitude",flex:1},{field:"longitude",flex:1}]},s=document.querySelector("#myGrid");var l,u=!1;function m(e){let a=e.target.value,n=[];for(let e=0;e<a.byteLength;e++)n.push("0x"+("00"+a.getUint8(e).toString(16)).slice(-2));if(15==n.length){let e="";switch(n[13]){case"0x01":e="uSv";break;case"0x04":e="SV/h";break;case"0x05":e="mR/h";break;case"0x06":e="CPS";break;case"0x07":e="CPM";break;case"0x08":e="impulse";break;case"0x09":e="impulse (timer on)"}let a=1;switch(n[12]){case"0x01":a=10;break;case"0x02":a=100;break;case"0x03":a=1e3}const c=parseInt(n[10].slice(2)+n[9].slice(2),10)/a;i.unshift({datetime:new Date,measurementValue:c,measurementType:e,latitude:t,longitude:o}),l.setGridOption("rowData",i),console.log("Current measurement: "+c+" - "+n.join(", "))}else console.log(n.length+" - "+n.join(", "))}u||(u=!0,l=agGrid.createGrid(s,r),setInterval((function(){navigator.geolocation.getCurrentPosition((function(e){t=e.coords.latitude,o=e.coords.longitude}))}),1e3)),c(a),document.getElementById("start").onclick=t=>{console.log("Requesting Bluetooth Device..."),navigator.bluetooth.requestDevice({filters:[{services:["0000fff0-0000-1000-8000-00805f9b34fb"]}]}).then((e=>(c(e.name),console.log("Connecting to GATT Server..."),e.gatt.connect()))).then((e=>(console.log("Getting Service..."),e.getPrimaryService(65520)))).then((e=>(console.log("Getting Characteristic..."),e.getCharacteristic(65522)))).then((t=>(e=t).startNotifications().then((t=>{console.log("> Notifications started"),e.addEventListener("characteristicvaluechanged",m)})))).catch((e=>{console.error(e)}))},document.getElementById("stop").onclick=t=>{e&&(e.stopNotifications().then((t=>{console.log("> Notifications stopped"),e.removeEventListener("characteristicvaluechanged",m)})).catch((e=>{console.log("Argh! "+e)})),c(a))},document.getElementById("export").onclick=e=>{l.exportDataAsCsv({fileName:"measurements-"+n+"-"+(new Date).toISOString()+".csv",columnSeparator:";"})}})();